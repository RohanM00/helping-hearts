# Generated by Django 3.2.3 on 2021-06-24 14:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('phone', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, default=None, max_length=6, null=True)),
                ('about', models.TextField(blank=True, default=None, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('account_type', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.user')),
                ('corona_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('beds', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('ventilators', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('oxygens', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('accepting_patients', models.BooleanField(default=True)),
                ('accepting_coworkers', models.BooleanField(default=True)),
                ('accepting_doctors', models.BooleanField(default=True)),
                ('accepting_nurses', models.BooleanField(default=True)),
                ('need_ventilator', models.BooleanField(default=False)),
                ('ventilators_requirement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('workers_requirement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('doctors_requirement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('nurses_requirement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='VenProvider',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.user')),
                ('age', models.IntegerField(blank=True, default=None, null=True)),
                ('gender', models.CharField(blank=True, default=None, max_length=12, null=True)),
                ('ventilators_available', models.BooleanField(default=True)),
                ('total_ventilators', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.user')),
                ('age', models.IntegerField(blank=True, default=None, null=True)),
                ('gender', models.CharField(blank=True, default=None, max_length=12, null=True)),
                ('health_status', models.TextField(blank=True, default=None, null=True)),
                ('ct_scan_score', models.FloatField(blank=True, default=None, null=True)),
                ('ct_scan_document', models.TextField(blank=True, default=None, null=True)),
                ('admit_request', models.BooleanField(default=False)),
                ('admitted', models.BooleanField(default=False)),
                ('bed_type', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('admitted_hospital', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_admitted_hospital', to='user.hospital')),
                ('requested_hospital', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_requested_hospital', to='user.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='CoWorker',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.user')),
                ('age', models.IntegerField(blank=True, default=None, null=True)),
                ('gender', models.CharField(blank=True, default=None, max_length=12, null=True)),
                ('available', models.BooleanField(default=True)),
                ('work_request', models.BooleanField(default=False)),
                ('requested_hospital', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coworker_requested_hospital', to='user.hospital')),
                ('working_at', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coworker_working_at', to='user.hospital')),
            ],
        ),
    ]
